on:
  workflow_dispatch:
  push:
    branches:
      - main

name: Artifacts

env:
  RELEASE_BIN: gotify-cli-rs
  RELEASE_DIR: artifacts
  WINDOWS_TARGET: x86_64-pc-windows-msvc
  WINDOWS_ARM_TARGET: aarch64-pc-windows-msvc
  MACOS_X86_TARGET: x86_64-apple-darwin
  LINUX_TARGET: x86_64-unknown-linux-musl
  LINUX_ARM_TARGET: aarch64-unknown-linux-musl

jobs:
  linux-binary:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-release-env

      - name: Install musl-tools and other dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install musl-tools gcc-aarch64-linux-gnu -y

      - name: Build
        run: |
          rustup target add ${{ env.LINUX_TARGET }}
          rustup target add ${{ env.LINUX_ARM_TARGET }}

          cargo build --release --target ${{ env.LINUX_TARGET }} --no-default-features
          cargo build --config "target.${{ env.LINUX_ARM_TARGET }}.linker = 'aarch64-linux-gnu-gcc'" \
            --release --target ${{ env.LINUX_ARM_TARGET }} --no-default-features

      - name: Create tarball and checksum
        run: |
          X86_64_ARCHIVE_FILE=${{ env.RELEASE_DIR }}/my_cli_app-${{ env.LINUX_TARGET }}.tar.gz
          AARCH64_ARCHIVE_FILE=${{ env.RELEASE_DIR }}/my_cli_app-${{ env.LINUX_ARM_TARGET }}.tar.gz

          strip ./target/${{ env.LINUX_TARGET }}/release/${{ env.RELEASE_BIN }}
          aarch64-linux-gnu-strip ./target/${{ env.LINUX_ARM_TARGET }}/release/${{ env.RELEASE_BIN }}

          mv ./target/${{ env.LINUX_TARGET }}/release/${{ env.RELEASE_BIN }} ./${{ env.RELEASE_BIN }}
          tar -cvzf ./${X86_64_ARCHIVE_FILE} ./${{ env.RELEASE_BIN }}

          mv ./target/${{ env.LINUX_ARM_TARGET }}/release/${{ env.RELEASE_BIN }} ./${{ env.RELEASE_BIN }}
          tar -cvzf ./${AARCH64_ARCHIVE_FILE} ./${{ env.RELEASE_BIN }}

          python -c "import hashlib; import pathlib; print(hashlib.sha256(pathlib.Path('${X86_64_ARCHIVE_FILE}').read_bytes()).hexdigest())" > ${X86_64_ARCHIVE_FILE}.sha256
          python -c "import hashlib; import pathlib; print(hashlib.sha256(pathlib.Path('${AARCH64_ARCHIVE_FILE}').read_bytes()).hexdigest())" > ${AARCH64_ARCHIVE_FILE}.sha256

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Linux artifacts
          path: ./${{ env.RELEASE_DIR }}/*

  create-release:
    needs: [linux-binary, windows-binary, macos-binary]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      attestations: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create a draft release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_PKG_VERSION }}
          draft: true
          files: |
            Linux artifacts/*
            Windows artifacts/*
            macOS artifacts/*
